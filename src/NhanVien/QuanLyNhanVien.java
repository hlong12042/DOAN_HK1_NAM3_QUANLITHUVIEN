/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NhanVien;

import Utils.Utils;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Linh
 */
public class QuanLyNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyNhanVien
     */
    public QuanLyNhanVien() {
        initComponents();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();

        setTitle("Staff manager");
        setAlwaysOnTop(true);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Tên", "Tuổi", "Giới tính", "Địa chỉ", "Tài khoản", "Mật khẩu", "isAdmin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã NV", "Tên", "Tài khoản" }));
        jComboBox1.setToolTipText("");

        searchField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addButton.setText("Thêm");
        addButton.setToolTipText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editButton.setText("Sửa");
        editButton.setToolTipText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        delButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        delButton.setText("Xoá");
        delButton.setToolTipText("Remove");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editButton)
                        .addComponent(delButton)
                        .addComponent(addButton))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        JTextField maNV = new JTextField();
        String ID = Utils.taoMaNV();
        maNV.setText(ID);
        maNV.setEditable(false);

        JTextField ten = new JTextField();
        JTextField tuoi = new JTextField();
        JTextField diaChi = new JTextField();
        JTextField tenDangNhap = new JTextField();
        JTextField matKhau = new JTextField();

        JRadioButton nam = new JRadioButton("Nam");
        nam.setActionCommand("Nam");

        JRadioButton nu = new JRadioButton("Nữ");
        nu.setActionCommand("Nữ");

        ButtonGroup gioiTinh = new ButtonGroup();
        gioiTinh.add(nam);
        gioiTinh.add(nu);

        JRadioButton isAdmin = new JRadioButton("true");
        isAdmin.setActionCommand("true");

        JRadioButton isNotAdmin = new JRadioButton("false");
        isNotAdmin.setActionCommand("false");

        ButtonGroup loaiTaiKhoan = new ButtonGroup();
        loaiTaiKhoan.add(isAdmin);
        loaiTaiKhoan.add(isNotAdmin);
        Object[] message = {
            "Mã nhân viên:", maNV,
            "Tên:", ten,
            "Tuổi:", tuoi,
            "Giới tính:", nam, nu,
            "Địa chỉ:", diaChi,
            "Tên đăng nhập:", tenDangNhap,
            "Mật khẩu:", matKhau,
            "isAdmin:", isAdmin, isNotAdmin
        };

        int choice = JOptionPane.showConfirmDialog(rootPane, message, "Thêm nhân viên", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            if (ten.getText().equals("")
                    || diaChi.getText().equals("")
                    || tenDangNhap.getText().equals("")
                    || matKhau.getText().equals("")
                    || gioiTinh.getSelection() == null
                    || loaiTaiKhoan.getSelection() == null) {
                JOptionPane.showMessageDialog(rootPane, "Thiếu thông tin!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            } else {
                if (Integer.valueOf(tuoi.getText()) >= 18) {
                    NhanVien nv = new NhanVien(maNV.getText(),
                            ten.getText(),
                            Integer.parseInt(tuoi.getText()),
                            gioiTinh.getSelection().getActionCommand(),
                            diaChi.getText(),
                            tenDangNhap.getText(),
                            matKhau.getText(),
                            Boolean.valueOf(loaiTaiKhoan.getSelection().getActionCommand()));

                    ArrayList<NhanVien> dsNhanVien = Utils.dsNhanVien();
                    dsNhanVien.add(nv);
                    try {
                        FileWriter writer = new FileWriter("nhanvien.txt");
                        for (NhanVien a : dsNhanVien) {
                            String info = a.maNV + "," + a.ten + ","
                                    + String.valueOf(a.tuoi) + ","
                                    + a.gioiTinh + ","
                                    + a.diaChi + ","
                                    + a.tenDangNhap + ","
                                    + a.matKhau + ","
                                    + String.valueOf(a.isAdmin) + "\n";
                            writer.write(info);
                        }
                        writer.close();

//                      Them ten tk vao dstk.txt
                        FileWriter writer2 = new FileWriter("dstk.txt", true);
                        writer2.append(nv.tenDangNhap).append('\n');
                        writer2.close();

                        loadData();
                    } catch (IOException ex) {
                        Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Tuổi không hợp lệ!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();

        if (jTable1.isRowSelected(selectedRowIndex)) {
            JTextField maNV = new JTextField(model.getValueAt(selectedRowIndex, 0).toString());
            maNV.setEditable(false);

            JTextField tenMoi = new JTextField(model.getValueAt(selectedRowIndex, 1).toString());
            JTextField tuoiMoi = new JTextField(model.getValueAt(selectedRowIndex, 2).toString());
            JTextField diaChiMoi = new JTextField(model.getValueAt(selectedRowIndex, 4).toString());
            JTextField tenDangNhapMoi = new JTextField(model.getValueAt(selectedRowIndex, 5).toString());
            JTextField matKhauMoi = new JTextField(model.getValueAt(selectedRowIndex, 6).toString());

            JRadioButton nam = new JRadioButton("Nam");
            nam.setActionCommand("Nam");

            JRadioButton nu = new JRadioButton("Nữ");
            nu.setActionCommand("Nữ");

            ButtonGroup gioiTinh = new ButtonGroup();
            gioiTinh.add(nam);
            gioiTinh.add(nu);

            JRadioButton isAdmin = new JRadioButton("true");
            isAdmin.setActionCommand("true");

            JRadioButton isNotAdmin = new JRadioButton("false");
            isNotAdmin.setActionCommand("false");

            ButtonGroup loaiTaiKhoan = new ButtonGroup();
            loaiTaiKhoan.add(isAdmin);
            loaiTaiKhoan.add(isNotAdmin);
            Object[] message = {
                "Mã nhân viên:", maNV,
                "Tên:", tenMoi,
                "Tuổi:", tuoiMoi,
                "Giới tính:", nam, nu,
                "Địa chỉ:", diaChiMoi,
                "Tên đăng nhập:", tenDangNhapMoi,
                "Mật khẩu:", matKhauMoi,
                "isAdmin:", isAdmin, isNotAdmin
            };

            int choice = JOptionPane.showConfirmDialog(rootPane,
                    message,
                    "Sửa thông tin nhân viên",
                    JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                if (tenMoi.getText().equals("")
                        || diaChiMoi.getText().equals("")
                        || tenDangNhapMoi.getText().equals("")
                        || matKhauMoi.getText().equals("")
                        || gioiTinh.getSelection() == null
                        || loaiTaiKhoan.getSelection() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Thiếu thông tin!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (Integer.valueOf(tuoiMoi.getText()) >= 18) {

                        NhanVien nv = new NhanVien(maNV.getText(),
                                tenMoi.getText(),
                                Integer.parseInt(tuoiMoi.getText()),
                                gioiTinh.getSelection().getActionCommand(),
                                diaChiMoi.getText(),
                                tenDangNhapMoi.getText(),
                                matKhauMoi.getText(),
                                Boolean.valueOf(loaiTaiKhoan.getSelection().getActionCommand()));
                        ArrayList<NhanVien> dsNhanVien = Utils.dsNhanVien();

                        Iterator<NhanVien> iter = dsNhanVien.iterator();
                        while (iter.hasNext()) {
                            NhanVien temp = iter.next();
                            if (temp.getMaNV().equals(maNV.getText())) {
                                iter.remove();
                            }
                        }
                        dsNhanVien.add(nv);

                        try {
                            FileWriter writer = new FileWriter("nhanvien.txt");
                            for (NhanVien a : dsNhanVien) {
                                String info = a.maNV + ","
                                        + a.ten + ","
                                        + String.valueOf(a.tuoi) + ","
                                        + a.gioiTinh + ","
                                        + a.diaChi + ","
                                        + a.tenDangNhap + ","
                                        + a.matKhau + ","
                                        + String.valueOf(a.isAdmin) + "\n";
                                writer.write(info);
                            }
                            writer.close();
                            loadData();
                        } catch (IOException ex) {
                            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Tuổi không hợp lệ!", "Lỗi", JOptionPane.WARNING_MESSAGE);

                    }
                }
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        int columnIndex = 0;
        String value = (String) jComboBox1.getSelectedItem();
        switch (value) {
            case "Mã NV":
                columnIndex = 0;
                break;
            case "Tên":
                columnIndex = 1;
                break;
            case "Tài khoản":
                columnIndex = 5;
                break;
        }
        timKiem(columnIndex);
    }//GEN-LAST:event_searchFieldKeyReleased

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();

        if (jTable1.isRowSelected(selectedRowIndex)) {
            String maNV = model.getValueAt(selectedRowIndex, 0).toString();
            String tenDangNhap = model.getValueAt(selectedRowIndex, 5).toString();
            int choice = JOptionPane.showConfirmDialog(rootPane,
                    "Bạn có muốn xoá nhân viên: "
                    + model.getValueAt(selectedRowIndex, 1).toString() + "?",
                    "Xoá nhân viên",
                    JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                String[] info = Utils.docThongTinDangNhap();
                if (tenDangNhap.equals(info[1])) {
                    JOptionPane.showMessageDialog(rootPane, "Không thể xoá chính mình", "Lỗi", JOptionPane.WARNING_MESSAGE);
                } else {

                    ArrayList<NhanVien> dsNhanVien = Utils.dsNhanVien();

                    Iterator<NhanVien> iter1 = dsNhanVien.iterator();
                    while (iter1.hasNext()) {
                        NhanVien temp = iter1.next();
                        if (temp.getMaNV().equals(maNV)) {
                            iter1.remove();
                        }
                    }

                    ArrayList<String> dsTK = Utils.taiKhoanHopLe();

                    Iterator<String> iter2 = dsTK.iterator();
                    while (iter2.hasNext()) {
                        String temp = iter2.next();
                        if (temp.equals(tenDangNhap)) {
                            iter2.remove();
                        }
                    }
                    try {
                        FileWriter writer1 = new FileWriter("nhanvien.txt");
                        for (NhanVien a : dsNhanVien) {
                            String line = a.maNV + ","
                                    + a.ten + ","
                                    + String.valueOf(a.tuoi) + ","
                                    + a.gioiTinh + ","
                                    + a.diaChi + ","
                                    + a.tenDangNhap + ","
                                    + a.matKhau + ","
                                    + String.valueOf(a.isAdmin) + "\n";
                            writer1.write(line);
                        }
                        writer1.close();

                        FileWriter writer2 = new FileWriter("dstk.txt");
                        for (String tk : dsTK) {
                            writer2.write(tk + '\n');
                        }
                        writer2.close();
                        loadData();
                    } catch (IOException ex) {
                        Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }


    }//GEN-LAST:event_delButtonActionPerformed

    public void loadData() {
        ArrayList<NhanVien> dsNhanVien = Utils.dsNhanVien();

        model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

//        forEach
//        dsNhanVien.forEach(nv -> {
//            Object[] data = {nv.maNV, nv.ten, nv.tuoi, nv.gioiTinh, nv.diaChi, nv.tenDangNhap, nv.matKhau, nv.isAdmin};
//            model.addRow(data);
//        });
//        classic for loop
        for (NhanVien nv : dsNhanVien) {
            Object[] data = {nv.maNV, nv.ten, nv.tuoi, nv.gioiTinh, nv.diaChi, nv.tenDangNhap, nv.matKhau, nv.isAdmin};
            model.addRow(data);
        }
    }

    private void timKiem(int columnIndex) {
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        jTable1.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(String.format("(?i)%s", searchField.getText()), columnIndex));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton delButton;
    private javax.swing.JButton editButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model;
}
