package kesach;
import static kesach.Ke.ghifile;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KYrA
 */
public class KeSachF extends javax.swing.JFrame {

    /**
     * Creates new form KeSachF
     */
    public KeSachF() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LabelThongBao = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        inputMaKe = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inputKhu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        inputHienTai = new javax.swing.JTextField();
        inputToiDa = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        inputMakeT = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnBoSung = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kệ sách");
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã kệ", "Khu", "Số sách tối đa", "Số sách hiện tại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        LabelThongBao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LabelThongBao.setForeground(java.awt.Color.red);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin kệ sách", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        inputMaKe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputMaKe.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                inputMaKeCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                inputMaKeInputMethodTextChanged(evt);
            }
        });
        inputMaKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMaKeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Mã kệ:");

        inputKhu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputKhu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputKhuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Khu:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Sách tối đa");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Sách hiện tại");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEdit.setText("Chỉnh sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        inputHienTai.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputHienTai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputHienTaiActionPerformed(evt);
            }
        });

        inputToiDa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputToiDa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputToiDaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputHienTai, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(inputToiDa)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputKhu)
                            .addComponent(inputMaKe)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputMaKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputKhu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputToiDa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputHienTai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnEdit))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Mã kệ");

        inputMakeT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputMakeT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputMakeTKeyTyped(evt);
            }
        });

        btnTimkiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnTimkiem.setText("Tìm kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnXoa.setText("Xóa kệ");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnBoSung.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBoSung.setText("Đã bổ sung");
        btnBoSung.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBoSungMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputMakeT))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 247, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBoSung, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTimkiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputMakeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimkiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBoSung)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 400, Short.MAX_VALUE)
                    .addComponent(LabelThongBao)
                    .addGap(0, 400, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 250, Short.MAX_VALUE)
                    .addComponent(LabelThongBao)
                    .addGap(0, 250, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maKe = inputMaKe.getText();
        String khu = inputKhu.getText();
        int toida = Integer.parseInt(inputToiDa.getText());
        int hientai = Integer.parseInt(inputHienTai.getText());

        Ke ke = new Ke();
        KeSach ks = ke.timMaKe(maKe);
        if (ks!=null)
        JOptionPane.showMessageDialog(rootPane, "Trùng mã kệ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
        else {
            try {
                ke.them2(new KeSach(maKe, khu, toida, hientai));
                ghifile("KeSach.txt", ke.getKeSach());
                JOptionPane.showMessageDialog(rootPane, "Đã thêm thành công", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(KeSachF.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void inputHienTaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputHienTaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputHienTaiActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String maKe = inputMaKe.getText();
        String khu = inputKhu.getText();
        String toidastr = inputToiDa.getText();
        String hientaistr = inputHienTai.getText();
        if(maKe.isEmpty()||khu.isEmpty()||toidastr.isEmpty()||hientaistr.isEmpty())
            LabelThongBao.setText("Không để trống!");
        else if(!KTinput(maKe)||!KTinput(khu))
            LabelThongBao.setText("Không nhập kí tự đặt biệt!");
        else{
            try {
                int option = JOptionPane.showConfirmDialog(rootPane, "Bạn chắn chắn muốn chỉnh sửa thông tin của đầu sách này?", "Cẩn thận",JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION){
                    Ke ke = new Ke();
                    int toida = Integer.parseInt(toidastr);
                    int hientai = Integer.parseInt(hientaistr);
                    KeSach kesach = ke.timMaKe(maKe);
                    kesach.setMake(maKe);
                    kesach.setKhu(khu);
                    kesach.setToida(toida);
                    kesach.setHientai(hientai);
                    ke.thaydoi(maKe, kesach);
                    JOptionPane.showMessageDialog(rootPane, "Đã chỉnh sửa thành công", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (IOException ex) {
                Logger.getLogger(KeSachF.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void inputMaKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMaKeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaKeActionPerformed

    private void inputMaKeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_inputMaKeInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaKeInputMethodTextChanged

    private void inputMaKeCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_inputMaKeCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMaKeCaretPositionChanged

    private void inputKhuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputKhuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputKhuActionPerformed

    private void inputToiDaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputToiDaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputToiDaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        String maKe = inputMakeT.getText();
        int option = JOptionPane.showConfirmDialog(rootPane, "Bạn chắn chắn muốn xóa thông tin của đầu sách này?", "Cẩn thận",JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION){
            Ke ke = new Ke();
            KeSach ks = ke.timMaKe(maKe);
            if (ks!=null)
            {
                try {
                    ke.xoa2(ks);
                } catch (IOException ex) {
                    Logger.getLogger(KeSachF.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(rootPane, "Đã xóa thành công", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy kệ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnBoSungMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBoSungMouseClicked
        // TODO add your handling code here:
        String maKe = inputMakeT.getText();
        int option = JOptionPane.showConfirmDialog(rootPane, "Bạn đã chất lại sách vào kệ này?", "Cẩn thận",JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION){
            Ke ke = new Ke();
            KeSach ks = ke.timMaKe(maKe);
            if (ks!=null)
            {
                try {
                    ks.setHientai(ks.getToida());
                    ke.thaydoi(maKe, ks);
                } catch (IOException ex) {
                    Logger.getLogger(KeSachF.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(rootPane, "Đã đặt thành công", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy kệ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBoSungMouseClicked

    private void inputMakeTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputMakeTKeyTyped
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_inputMakeTKeyTyped

    public static boolean KTinput(String str){
        if(str.isEmpty()) return true;
        String regex = "\\w+";
        String[] ls = str.split(" ");
        for (String s:ls){
            if(!s.matches(regex)) 
                return false;
        }
        return true;
    }
    
    private void timKiem(){
        Ke ke = new Ke();
        String maKe = inputMakeT.getText();
        List<KeSach> ds = ke.getKeSach();
        boolean flag = true;
        if(!maKe.isEmpty()){
                while (flag){
                    int count = 0;
                    for(KeSach kesach:ds){
                        if(kesach.getMake().indexOf(maKe)==-1) {
                            ds.remove(kesach);
                            break;
                        }
                        count++;
                    }
                    if(count == ds.size()) flag = false;
                }
            }
        Vector header = new Vector();
            header.add("Mã kệ");
            header.add("Khu");
            header.add("Sách tối đa");
            header.add("Sách hiện tại");
           
        Vector data = new Vector();
            for (KeSach ks:ds){
                Vector row = new Vector();
                row.add(ks.getMake());
                row.add(ks.getKhu());
                row.add(ks.getToida());
                row.add(ks.getHientai());
                data.add(row);
            }
        jTable1.setModel(new DefaultTableModel(data, header));
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeSachF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeSachF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeSachF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeSachF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        KeSach kesach = new KeSach("SGK","Sách Giáo Khoa", 150, 150);
//        List<KeSach> ds = new Vector<>();
//        ds.add(kesach);
//        ghifile("KeSach.txt", ds);
//        
//        System.out.print(kesach.toString());
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KeSachF().setVisible(true);
            }
        });
      
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelThongBao;
    private javax.swing.JButton btnBoSung;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JTextField inputHienTai;
    private javax.swing.JTextField inputKhu;
    private javax.swing.JTextField inputMaKe;
    private javax.swing.JTextField inputMakeT;
    private javax.swing.JTextField inputToiDa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
