/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hoadon;

import static hoadon.HoaDon.docDS;
import static hoadon.HoaDon.locNgayThang;
import static hoadon.HoaDon.xuatTongDoanhThuTrongThang;
import java.awt.Component;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class QuanLiHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form QuanLiHoaDon
     */
    public QuanLiHoaDon() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_HDTop1 = new javax.swing.JButton();
        btn_TongDoanhThu = new javax.swing.JButton();
        text_Thang = new javax.swing.JTextField();
        text_Nam = new javax.swing.JTextField();
        lb_Nam = new javax.swing.JLabel();
        lb_Thang = new javax.swing.JLabel();
        btn_TimKiem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        inputMaHoaDon = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputTenNV = new javax.swing.JTextField();
        btnThoat = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_DanhSach = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Statistic");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.setToolTipText("");

        btn_HDTop1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_HDTop1.setText("Danh sách hóa đơn theo thành tiền");
        btn_HDTop1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_HDTop1MouseClicked(evt);
            }
        });

        btn_TongDoanhThu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_TongDoanhThu.setText("Thống kê doanh thu tháng");
        btn_TongDoanhThu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TongDoanhThuMouseClicked(evt);
            }
        });

        text_Thang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        text_Nam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lb_Nam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_Nam.setText("Năm:");

        lb_Thang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_Thang.setText("Tháng:");

        btn_TimKiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Mã Hóa Đơn:");

        inputMaHoaDon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Ngày lập hóa đơn:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nhân viên lập:");

        inputTenNV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnThoat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setToolTipText("");
        btnThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThoatMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTenNV))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_Thang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_Nam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)
                        .addComponent(inputMaHoaDon))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 277, Short.MAX_VALUE)
                        .addComponent(btn_TimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_HDTop1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_TongDoanhThu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThoat)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Thang)
                    .addComponent(lb_Nam)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TongDoanhThu)
                    .addComponent(btn_HDTop1)
                    .addComponent(btn_TimKiem)
                    .addComponent(btnThoat))
                .addContainerGap())
        );

        list_DanhSach.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jScrollPane2.setViewportView(list_DanhSach);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_TimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemMouseClicked
        try {
            // TODO add your handling code here:
            String maHD = inputMaHoaDon.getText();
            String tenNV = inputTenNV.getText();
            List<HoaDon> ds = null;
            if(text_Thang.getText().isEmpty() || text_Nam.getText().isEmpty())                    
                ds = docDS();
            else {
                if(!(this.ktNgayThang()))
                    return;
                else{
                    int thang = Integer.parseInt(text_Thang.getText());
                    int nam = Integer.parseInt(text_Nam.getText());
                    ds = locNgayThang(thang,nam);
                }
            }
            boolean flag = true;
            if(!maHD.isEmpty()){
                while (flag){
                    int count = 0;
                    if(ds.isEmpty()){
                        list_DanhSach.setText("");
                        inputMaHoaDon.setText("");
                        inputTenNV.setText("");
                        text_Nam.setText("");
                        text_Thang.setText("");
                        JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY HÓA ĐƠN NÀO", "NOT FOUND", 
                                JOptionPane.INFORMATION_MESSAGE);  
                        return;
                    }
//                    for(HoaDon hoaDon:ds){
//                        if(!hoaDon.getIDHoaDon().equals(maHD)){
//                            ds.remove(hoaDon);
//                        }
//                    }
                    for(HoaDon hoaDon:ds){
                        if(hoaDon.getIDHoaDon().indexOf(maHD) == -1) {
                            ds.remove(hoaDon);
                            break;
                        }
                        count++;
                    }
                    if(count == ds.size()) flag = false;
                }
            }
            flag = true;
            if(!tenNV.isEmpty()){
                while (flag){
                    int count = 0;
                    if(ds.isEmpty()){
                        list_DanhSach.setText("");
                        inputMaHoaDon.setText("");
                        inputTenNV.setText("");
                        text_Nam.setText("");
                        text_Thang.setText("");
                        JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY HÓA ĐƠN NÀO", "NOT FOUND", 
                                JOptionPane.INFORMATION_MESSAGE);  
                        return;
                    }
//                    for(HoaDon hoaDon:ds){
//                        if(!hoaDon.getTenNV().equals(tenNV)){
//                            ds.remove(hoaDon);
//                        }
//                    }
                    for(HoaDon hoaDon:ds){
                        if(hoaDon.getTenNV().indexOf(tenNV)==-1) {
                            ds.remove(hoaDon);
                            break;
                        }
                        count++;
                    }
                    if(count == ds.size()) flag = false;
                }
            }
            if(ds.isEmpty()){
                list_DanhSach.setText("");
                inputMaHoaDon.setText("");
                inputTenNV.setText("");
                text_Nam.setText("");
                text_Thang.setText("");
              JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY HÓA ĐƠN NÀO", "NOT FOUND", 
                      JOptionPane.INFORMATION_MESSAGE);  
              return;
            }
            String str = "";
            for(HoaDon hoaDon:ds){
                str += hoaDon.toString();
            }
            list_DanhSach.setText(str);
        } catch (IOException ex) {
            Logger.getLogger(QuanLiHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_TimKiemMouseClicked

    private void btn_HDTop1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_HDTop1MouseClicked
        // TODO add your handling code here:
        list_DanhSach.removeAll();
        if(text_Thang.getText().isEmpty()||text_Nam.getText().isEmpty()){
             list_DanhSach.setText("");
             inputMaHoaDon.setText("");
             inputTenNV.setText("");
             text_Thang.setText("");
             text_Nam.setText("");
            JOptionPane.showMessageDialog(rootPane, "Nhập tháng, năm để thực hiện chức năng này", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!(this.ktNgayThang())){
            return;
        }
        HoaDon hd = new HoaDon();
        List<String> list = new Vector<>();
        this.inputMaHoaDon.setText("");
        this.inputTenNV.setText("");
        try {
            list = hd.timKiemTop1HD(Integer.parseInt(this.text_Thang.getText()), Integer.parseInt(this.text_Nam.getText()));
        } catch (IOException ex) {
            Logger.getLogger(QuanLiHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(list.isEmpty()){
            list_DanhSach.setText("");
            inputMaHoaDon.setText("");
            inputTenNV.setText("");
            text_Nam.setText("");
            text_Thang.setText("");
            JOptionPane.showMessageDialog(rootPane, "KHÔNG TÌM THẤY HÓA ĐƠN NÀO", "NOT FOUND", 
                      JOptionPane.INFORMATION_MESSAGE);
        }else{
            String str = "";
            for (String temp:list)
                str += temp + "\n";
            list_DanhSach.setText(str);
        }
    }//GEN-LAST:event_btn_HDTop1MouseClicked

    private void btn_TongDoanhThuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TongDoanhThuMouseClicked
        // TODO add your handling code here:
        if(text_Thang.getText().isEmpty()||text_Nam.getText().isEmpty()){
            list_DanhSach.setText("");
            inputMaHoaDon.setText("");
            inputTenNV.setText("");
            text_Thang.setText("");
            text_Nam.setText("");
            JOptionPane.showMessageDialog(rootPane, "Nhập tháng, năm để thực hiện chức năng này", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!(this.ktNgayThang())){
            return;
        }
        try {
            list_DanhSach.setText(xuatTongDoanhThuTrongThang(Integer.parseInt(text_Thang.getText()), Integer.parseInt(text_Nam.getText())));
        } catch (IOException ex) {
            Logger.getLogger(QuanLiHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_TongDoanhThuMouseClicked

    private void btnThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThoatMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnThoatMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLiHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLiHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLiHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLiHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLiHoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btn_HDTop1;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_TongDoanhThu;
    private javax.swing.JTextField inputMaHoaDon;
    private javax.swing.JTextField inputTenNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb_Nam;
    private javax.swing.JLabel lb_Thang;
    private javax.swing.JEditorPane list_DanhSach;
    private javax.swing.JTextField text_Nam;
    private javax.swing.JTextField text_Thang;
    // End of variables declaration//GEN-END:variables

    //***********************************************************gettter and setter
    public void setThang(int thang){
        this.text_Thang.setText(String.valueOf(thang));
    }
    public void setNam(int nam){
        this.text_Nam.setText(String.valueOf(nam));
    }
    public int getThang(){
        return Integer.parseInt(this.text_Thang.getText());
    }
    public int getNam(){
        return Integer.parseInt(this.text_Nam.getText());
    }
//**********************************************************************************************ham xu li
    public boolean ktNgayThang(){
        int m,y;
        Component panel = null;
//        if(this.text_Thang.getText() == "" || this.text_Nam.getText() == ""){
//            JOptionPane.showMessageDialog(panel, "BẠN CHƯA NHẬP THÁNG, NĂM", "WARNING", 
//                      JOptionPane.WARNING_MESSAGE);
//            return false;
//        }
        try{
            m = Integer.parseInt(this.text_Thang.getText());
            y = Integer.parseInt(this.text_Nam.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(panel, "CHỈ ĐƯỢC NHẬP SỐ VÀO CÁC Ô THÁNG, NĂM", "WARNING", 
                      JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if(y>=1970){       
            if(m<1||12<m){
                JOptionPane.showMessageDialog(panel, "BẠN ĐÃ NHẬP SAI THÁNG\nTHÁNG PHẢI LỚN HƠN HOẶC BẰNG 1 VÀ NHỎ HƠN HOẶC BẰNG 12!!!", "WARNING", 
                                JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }
        else{
            JOptionPane.showMessageDialog(panel, "BẠN ĐÃ NHẬP SAI NĂM\nNĂM PHẢI LỚN HƠN HOẶC BẰNG 1970!!!", "WARNING", 
                                JOptionPane.WARNING_MESSAGE);
                                return false;
        }
        return true;        
    }
    
    public boolean ktNamNhuan(int year){
        return (((year % 4 == 0) && (year % 100 != 0)) || 
            (year % 400 == 0)); 
    }
}
